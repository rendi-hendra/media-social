{
  "openapi": "3.0.3",
  "info": {
    "title": "Todolist Restful API",
    "version": "1.0",
    "description": "OpenAPI for Todolist Restful API",
    "termsOfService": "https://www.todolist.com/termsOfService",
    "contact": {
      "name": "Rendi hendra Syahputra",
      "email": "rendi2004@gmail.com",
      "url": "https://api.server.test/contact"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "https://www.apache.org/licenses/LICENSE-2.0"
    }
  },
  "servers": [
    {
      "description": "API Server",
      "url": "https://api.{envronment}",
      "variables": {
        "envronment": {
          "description": "Server Environment",
          "default": "dev",
          "enum": ["dev", "qa", "prod"]
        }
      }
    }
  ],
  "externalDocs": {
    "description": "API Documentation",
    "url": "https://api.server.test/docs"
  },
  "paths": {
    "/user/current": {
      "get": {
        "security": [
          {
            "Auth": []
          }
        ],
        "tags": ["User"],
        "summary": "Get user current",
        "description": "Get user current",
        "responses": {
          "200": {
            "description": "Success get user current",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string"
                    },
                    "token": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "success": {
                    "description": "Example success get user current",
                    "value": {
                      "id": "1",
                      "name": "Rendi",
                      "email": "test@examples.com",
                      "token": "123213edsad1"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "failed": {
                    "description": "Example failed get user current",
                    "value": {
                      "message": "Unauthorized"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/user": {
      "post": {
        "tags": ["User"],
        "summary": "Create new user",
        "description": "Create new user to database",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                }
              },
              "example": {
                "name": "Rendi",
                "email": "test@examples.com",
                "password": "password"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success create new user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string"
                    },
                    "token": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "success": {
                    "description": "Example success create new user",
                    "value": {
                      "id": "1",
                      "name": "Rendi",
                      "email": "test@examples.com",
                      "token": "123213edsad1"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "failed": {
                    "description": "Example failed create new user",
                    "value": {
                      "message": "Bad request"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/user/login": {
      "post": {
        "tags": ["User"],
        "summary": "Login user",
        "description": "Login user to database",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                }
              },
              "example": {
                "email": "test@examples.com",
                "password": "password"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success login user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "number"
                    },
                    "name": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string"
                    },
                    "token": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "id": 1,
                  "name": "Rendi",
                  "email": "test@examples.com",
                  "token": "123213edsad1"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "message": "Email or password invalid"
                }
              }
            }
          }
        }
      }
    },

    "/user/{userId}": {
      "put": {
        "security": [
          {
            "Auth": []
          }
        ],
        "tags": ["User"],
        "summary": "Update existing user",
        "description": "Update existing user to database",
        "parameters": [
          {
            "$ref": "#/components/parameters/UserId"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  }
                }
              },
              "example": {
                "name": "Rendi",
                "email": "test@examples.com"
              }
            }
          }
        },

        "responses": {
          "200": {
            "description": "Success update user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "id": 1,
                  "name": "Rendi",
                  "email": "rendi@example.com"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "message": "Bad request"
                }
              }
            }
          }
        }
      },
      "delete": {
        "security": [
          {
            "Auth": []
          }
        ],
        "tags": ["User"],
        "summary": "Delete existing user",
        "description": "Delete existing user in database",
        "parameters": [
          {
            "$ref": "#/components/parameters/UserId"
          }
        ],
        "responses": {
          "200": {
            "description": "Success delete user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    }
                  }
                },
                "examples": {
                  "success": {
                    "description": "Success delete todolist",
                    "value": {
                      "success": true
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Failed delete not found user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    }
                  }
                },
                "examples": {
                  "failed": {
                    "description": "Failed delete user",
                    "value": {
                      "success": false
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "Auth": {
        "description": "Authentication for User RESTful API",
        "type": "apiKey",
        "in": "header",
        "name": "token"
      }
    },
    "parameters": {
      "UserId": {
        "name": "userId",
        "in": "path",
        "required": true,
        "description": "User id for updated",
        "schema": {
          "type": "string",
          "minLength": 1
        }
      }
    },
    "schemas": {
      "Todolist": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "priority": {
            "type": "integer",
            "format": "int32"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "CreateOrUpdateTodolist": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "priority": {
            "type": "integer",
            "format": "int32"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "ArrayTodolist": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Todolist"
        }
      }
    }
  }
}
