{
  "openapi": "3.0.3",
  "info": {
    "title": "Media Social Restful API",
    "version": "1.0",
    "description": "OpenAPI for Media Social Restful API",
    "termsOfService": "https://www.mediasocial.com/termsOfService",
    "contact": {
      "name": "Rendi hendra Syahputra",
      "email": "rendi2004@gmail.com",
      "url": "https://api.server.test/contact"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "https://www.apache.org/licenses/LICENSE-2.0"
    }
  },
  "servers": [
    {
      "description": "API Server",
      "url": "https://api.{environment}",
      "variables": {
        "environment": {
          "description": "Server Environment",
          "default": "dev",
          "enum": ["dev", "qa", "prod"]
        }
      }
    }
  ],
  "externalDocs": {
    "description": "API Documentation",
    "url": "https://api.server.test/docs"
  },
  "paths": {
    "/users/current": {
      "get": {
        "security": [
          {
            "Auth": []
          }
        ],
        "tags": ["User"],
        "summary": "Get user current",
        "description": "Get user current",
        "responses": {
          "200": {
            "description": "Success get user current",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateOrGetCurrent"
                },
                "example": {
                  "id": 1,
                  "name": "Rendi",
                  "email": "test@examples.com"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          }
        }
      }
    },
    "/users": {
      "post": {
        "tags": ["User"],
        "summary": "Create new user",
        "description": "Create new user to database",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "password": {
                    "type": "string"
                  }
                }
              },
              "example": {
                "name": "Rendi",
                "email": "test@examples.com",
                "password": "password"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success create new user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateOrGetCurrent"
                },
                "example": {
                  "id": 1,
                  "name": "Rendi",
                  "email": "test@examples.com",
                  "createdAt": "2025-12-10T00:00:00.000Z"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          }
        }
      }
    },
    "/users/login": {
      "post": {
        "tags": ["User"],
        "summary": "Login user",
        "description": "Login user to database",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "password": {
                    "type": "string"
                  }
                }
              },
              "example": {
                "email": "test@examples.com",
                "password": "password"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success login user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "number"
                    },
                    "name": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string",
                      "format": "email"
                    },
                    "token": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "id": 1,
                  "name": "Rendi",
                  "email": "test@examples.com",
                  "token": "123TOKEN"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "message": "Email or Password invalid"
                }
              }
            }
          }
        }
      }
    },
    "/users/logout": {
      "delete": {
        "security": [
          {
            "Auth": []
          }
        ],
        "tags": ["User"],
        "summary": "Logout user",
        "description": "Update logout existing user to database",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email"
                  }
                }
              },
              "example": {
                "email": "test@examples.com"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success user logout",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LogoutOrDelete"
                },
                "example": {
                  "success": true
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          }
        }
      }
    },
    "/user/current": {
      "delete": {
        "security": [
          {
            "Auth": []
          }
        ],
        "tags": ["User"],
        "summary": "Delete existing user",
        "description": "Delete existing user in database",
        "parameters": [
          {
            "$ref": "#/components/parameters/UserId"
          }
        ],
        "responses": {
          "200": {
            "description": "Success delete user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LogoutOrDelete"
                },
                "examples": {
                  "success": {
                    "description": "Success delete user",
                    "value": {
                      "success": true
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Failed delete not found user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LogoutOrDelete"
                },
                "examples": {
                  "failed": {
                    "description": "Failed delete user",
                    "value": {
                      "success": false
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/profiles/{userId}": {
      "get": {
        "security": [
          {
            "Auth": []
          }
        ],
        "tags": ["Profile"],
        "summary": "Get user profile",
        "description": "Get user profile",
        "parameters": [
          {
            "$ref": "#/components/parameters/UserId"
          }
        ],
        "responses": {
          "200": {
            "description": "Success get user profile",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Profile"
                },
                "example": {
                  "id": 1,
                  "name": "Rendi",
                  "email": "test@examples.com",
                  "image": "http://example.com/image.jpg"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          }
        }
      },
      "patch": {
        "security": [
          {
            "Auth": []
          }
        ],
        "tags": ["Profile"],
        "summary": "Update user profile",
        "description": "Update user profile",
        "parameters": [
          {
            "$ref": "#/components/parameters/UserId"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "image": {
                    "type": "string"
                  }
                }
              },
              "example": {
                "name": "Rendi",
                "email": "test@examples.com",
                "image": "http://example.com/image.jpg"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success update user profile",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Profile"
                },
                "example": {
                  "id": 1,
                  "name": "Rendi",
                  "email": "test@examples.com",
                  "image": "http://example.com/image.jpg"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/badRequest"
          }
        }
      },
      "delete": {
        "security": [
          {
            "Auth": []
          }
        ],
        "tags": ["Profile"],
        "summary": "Delete user profile",
        "description": "Delete user profile",
        "parameters": [
          {
            "$ref": "#/components/parameters/UserId"
          }
        ],
        "responses": {
          "200": {
            "description": "Success delete user profile",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "image": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "image": "http://example.com/default.jpg"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          }
        }
      }
    },
    "/follows/{userId}/count": {
      "get": {
        "security": [
          {
            "Auth": []
          }
        ],
        "tags": ["Follow"],
        "summary": "Get user count follow",
        "description": "Get user count followers and following",
        "parameters": [
          {
            "$ref": "#/components/parameters/UserId"
          }
        ],
        "responses": {
          "200": {
            "description": "Success get user count followers and following",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "followers": {
                      "type": "number"
                    },
                    "following": {
                      "type": "number"
                    }
                  }
                },
                "example": {
                  "followers": 10,
                  "following": 5
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          }
        }
      }
    },
    "/followers/{userId}": {
      "get": {
        "security": [
          {
            "Auth": []
          }
        ],
        "tags": ["Follow"],
        "summary": "Get user list followers",
        "description": "Get user list followers",
        "parameters": [
          {
            "$ref": "#/components/parameters/UserId"
          }
        ],
        "responses": {
          "200": {
            "description": "Success get user followers",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FollowersAndFollowing"
                },
                "example": [
                  {
                    "id": 1,
                    "name": "John Doe",
                    "profile": "http://example.com/johndoe.jpg"
                  },
                  {
                    "id": 20,
                    "name": "Jane Doe",
                    "profile": "http://example.com/janedoe.jpg"
                  }
                ]
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          }
        }
      }
    },
    "/following/{userId}": {
      "get": {
        "security": [
          {
            "Auth": []
          }
        ],
        "tags": ["Follow"],
        "summary": "Get user list following",
        "description": "Get user list following",
        "parameters": [
          {
            "$ref": "#/components/parameters/UserId"
          }
        ],
        "responses": {
          "200": {
            "description": "Success get user following",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FollowersAndFollowing"
                },
                "example": [
                  {
                    "id": 1,
                    "name": "John Doe",
                    "profile": "http://example.com/johndoe.jpg"
                  },
                  {
                    "id": 20,
                    "name": "Jane Doe",
                    "profile": "http://example.com/janedoe.jpg"
                  }
                ]
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          }
        }
      }
    },
    "/follows": {
      "post": {
        "security": [
          {
            "Auth": []
          }
        ],
        "tags": ["Follow"],
        "summary": "Follow user",
        "description": "Follow user",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "number"
                  }
                }
              },
              "example": {
                "id": 1
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success follow user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FollowAndUnfollow"
                },
                "example": {
                  "status": "ACCEPTED",
                  "following": {
                    "id": 1,
                    "username": "John Doe",
                    "name": "John Doe"
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict with follow user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorFollowAndUnfollow"
                },
                "example": {
                  "status": "error",
                  "message": "You are already following this user."
                }
              }
            }
          }
        }
      },
      "patch": {
        "security": [
          {
            "Auth": []
          }
        ],
        "tags": ["Follow"],
        "summary": "Update follow status",
        "description": "Update follow status",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "number"
                  }
                }
              },
              "example": {
                "id": 1
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success update follow status",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FollowAndUnfollow"
                },
                "example": {
                  "status": "ACCEPTED",
                  "following": {
                    "id": 1,
                    "username": "John Doe",
                    "name": "John Doe"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "security": [
          {
            "Auth": []
          }
        ],
        "tags": ["Follow"],
        "summary": "Unfollow user",
        "description": "Unfollow user",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "followersId": {
                    "type": "number"
                  },
                  "followingId": {
                    "type": "number"
                  }
                }
              },
              "example": {
                "followerId": 1,
                "followingId": 20
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success unfollow user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FollowAndUnfollow"
                },
                "example": {
                  "status": "success",
                  "message": "You are now unfollowing this user.",
                  "followerId": 1,
                  "followingId": 20
                }
              }
            }
          },
          "404": {
            "description": "Not found unfollow user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorFollowAndUnfollow"
                },
                "example": {
                  "status": "error",
                  "message": "User not found."
                }
              }
            }
          },
          "409": {
            "description": "Conflict with unfollow user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorFollowAndUnfollow"
                },
                "example": {
                  "status": "error",
                  "message": "You cannot unfollow a user you are not following."
                }
              }
            }
          }
        }
      }
    },
    "/users/{userId}/notifications": {
      "get": {
        "security": [
          {
            "Auth": []
          }
        ],
        "tags": ["Notification"],
        "summary": "Get user notifications",
        "description": "Get user notifications",
        "parameters": [
          {
            "$ref": "#/components/parameters/UserId"
          }
        ],
        "responses": {
          "200": {
            "description": "Success get user notifications",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "number"
                      },
                      "type": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "actor": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "number"
                          },
                          "name": {
                            "type": "string"
                          },
                          "profileImage": {
                            "type": "string"
                          }
                        }
                      },
                      "isRead": {
                        "type": "boolean"
                      },
                      "createdAt": {
                        "type": "string"
                      }
                    }
                  }
                },
                "example": [
                  {
                    "id": 1,
                    "type": "follow",
                    "message": "John Doe followed you",
                    "actor": {
                      "id": 101,
                      "name": "John Doe",
                      "profile": "https://example.com/profiles/johndoe.jpg"
                    },
                    "isRead": false,
                    "createdAt": "2022-01-01T00:00:00.000Z"
                  },
                  {
                    "id": 2,
                    "type": "like",
                    "message": "Jane Smith liked your post",
                    "actor": {
                      "id": 102,
                      "name": "Jane Smith",
                      "profile": "https://example.com/profiles/janesmith.jpg"
                    },
                    "isRead": true,
                    "createdAt": "2022-01-02T10:00:00.000Z"
                  }
                ]
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          }
        }
      }
    },
    "/users{userId}/notifications/count": {
      "get": {
        "security": [
          {
            "Auth": []
          }
        ],
        "tags": ["Notification"],
        "summary": "Get user notifications count",
        "description": "Get user notifications count",
        "parameters": [
          {
            "$ref": "#/components/parameters/UserId"
          }
        ],
        "responses": {
          "200": {
            "description": "Success get user notifications count",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "userId": {
                      "type": "number"
                    },
                    "total": {
                      "type": "number"
                    },
                    "unread": {
                      "type": "number"
                    }
                  }
                },
                "example": {
                  "userId": 1,
                  "total": 15,
                  "unread": 5
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          }
        }
      }
    },
    "/notifications": {
      "post": {
        "security": [
          {
            "Auth": []
          }
        ],
        "tags": ["Notification"],
        "summary": "Create new notification",
        "description": "Create new notification to database",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userId": {
                    "type": "number"
                  },
                  "actorId": {
                    "type": "number"
                  },
                  "type": {
                    "type": "string"
                  }
                }
              },
              "example": {
                "userId": 1,
                "actorId": 101,
                "type": "follow"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success create new notification",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResNotification"
                },
                "example": {
                  "id": 1,
                  "userId": 2,
                  "actorId": 101,
                  "type": "follow",
                  "message": "John Doe followed you",
                  "isRead": false,
                  "createdAt": "2024-12-10T00:00:00.000Z"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          }
        }
      }
    },
    "/notifications/{notificationId}": {
      "patch": {
        "security": [
          {
            "Auth": []
          }
        ],
        "tags": ["Notification"],
        "summary": "Read notification",
        "description": "Read notification",
        "parameters": [
          {
            "$ref": "#/components/parameters/notificationId"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "isRead": {
                    "type": "boolean"
                  }
                }
              },
              "example": {
                "isRead": true
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success read notification",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResNotification"
                },
                "example": {
                  "id": 1,
                  "userId": 2,
                  "actorId": 101,
                  "type": "follow",
                  "message": "John Doe followed you",
                  "isRead": true,
                  "createdAt": "2024-12-10T00:00:00.000Z"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          }
        }
      },
      "delete": {
        "security": [
          {
            "Auth": []
          }
        ],
        "tags": ["Notification"],
        "summary": "Delete notification",
        "description": "Delete notification",
        "parameters": [
          {
            "$ref": "#/components/parameters/notificationId"
          }
        ],
        "responses": {
          "200": {
            "description": "Success delete notification",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "message": "Notification successfully deleted"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          }
        }
      }
    },
    "/posts/{postId}": {
      "get": {
        "security": [
          {
            "Auth": []
          }
        ],
        "tags": ["Post"],
        "summary": "Get post by id",
        "description": "Get post by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/PostId"
          }
        ],
        "responses": {
          "200": {
            "description": "Success get post by id",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "number"
                    },
                    "userId": {
                      "type": "number"
                    },
                    "image": {
                      "type": "string"
                    },
                    "slug": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "createdAt": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "id": 1,
                  "userId": 1,
                  "image": "http://example.com/image.jpg",
                  "slug": "hello-world",
                  "description": "Hello world",
                  "createdAt": "2024-12-10T00:00:00.000Z"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/PostsNotFound"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          }
        }
      },
      "patch": {
        "security": [
          {
            "Auth": []
          }
        ],
        "tags": ["Post"],
        "summary": "Update post",
        "description": "Update post",
        "parameters": [
          {
            "$ref": "#/components/parameters/PostId"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "description": {
                    "type": "string"
                  }
                }
              },
              "example": {
                "description": "Hello world"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success update post",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "number"
                    },
                    "userId": {
                      "type": "number"
                    },
                    "image": {
                      "type": "string"
                    },
                    "slug": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "createdAt": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "id": 1,
                  "userId": 1,
                  "image": "http://example.com/image.jpg",
                  "slug": "hello-world",
                  "description": "Hello world",
                  "createdAt": "2024-12-10T00:00:00.000Z"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/PostsNotFound"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          }
        }
      },
      "delete": {
        "security": [
          {
            "Auth": []
          }
        ],
        "tags": ["Post"],
        "summary": "Delete post",
        "description": "Delete post",
        "parameters": [
          {
            "$ref": "#/components/parameters/PostId"
          }
        ],
        "responses": {
          "200": {
            "description": "Success delete post",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "message": "Post successfully deleted"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/PostsNotFound"
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          }
        }
      }
    },
    "/users/{userId}/posts": {
      "get": {
        "security": [
          {
            "Auth": []
          }
        ],
        "tags": ["Post"],
        "summary": "Get user posts",
        "description": "Get user posts",
        "parameters": [
          {
            "$ref": "#/components/parameters/UserId"
          }
        ],
        "responses": {
          "200": {
            "description": "Success get user posts",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "number"
                      },
                      "userId": {
                        "type": "number"
                      },
                      "image": {
                        "type": "string"
                      },
                      "slug": {
                        "type": "string"
                      },
                      "description": {
                        "type": "string"
                      },
                      "createdAt": {
                        "type": "string"
                      }
                    }
                  }
                },
                "example": [
                  {
                    "id": 1,
                    "userId": 1,
                    "image": "http://example.com/image.jpg",
                    "slug": "hello-world",
                    "description": "Hello world",
                    "createdAt": "2024-12-10T00:00:00.000Z"
                  },
                  {
                    "id": 2,
                    "userId": 1,
                    "image": "http://example.com/image.jpg",
                    "slug": "hello-world",
                    "description": "Hello world",
                    "createdAt": "2024-12-10T00:00:00.000Z"
                  }
                ]
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "message": "User not found."
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          }
        }
      }
    },
    "/posts": {
      "get": {
        "security": [
          {
            "Auth": []
          }
        ],
        "tags": ["Post"],
        "summary": "Get all posts",
        "description": "Get all posts",
        "responses": {
          "200": {
            "description": "Success get all posts",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "number"
                      },
                      "userId": {
                        "type": "number"
                      },
                      "image": {
                        "type": "string"
                      },
                      "slug": {
                        "type": "string"
                      },
                      "description": {
                        "type": "string"
                      },
                      "createdAt": {
                        "type": "string"
                      }
                    }
                  }
                },
                "example": [
                  {
                    "id": 1,
                    "userId": 1,
                    "image": "http://example.com/image.jpg",
                    "slug": "hello-world",
                    "description": "Hello world",
                    "createdAt": "2024-12-10T00:00:00.000Z"
                  },
                  {
                    "id": 2,
                    "userId": 20,
                    "image": "http://example.com/image.jpg",
                    "slug": "hello-world",
                    "description": "Hello world",
                    "createdAt": "2024-12-10T00:00:00.000Z"
                  }
                ]
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          }
        }
      },
      "post": {
        "security": [
          {
            "Auth": []
          }
        ],
        "tags": ["Post"],
        "summary": "Create new post",
        "description": "Create new post to database",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userId": {
                    "type": "number"
                  },
                  "image": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  }
                }
              },
              "example": {
                "userId": 1,
                "image": "http://example.com/image.jpg",
                "description": "Hello world"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success create new post",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "number"
                    },
                    "userId": {
                      "type": "number"
                    },
                    "image": {
                      "type": "string"
                    },
                    "slug": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "createdAt": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "id": 1,
                  "userId": 1,
                  "image": "http://example.com/image.jpg",
                  "slug": "hello-world",
                  "description": "Hello world",
                  "createdAt": "2024-12-10T00:00:00.000Z"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          }
        }
      }
    },
    "/posts{postId}/comments": {
      "get": {
        "security": [
          {
            "Auth": []
          }
        ],
        "tags": ["Comment"],
        "summary": "Get all comments",
        "description": "Get all comments",
        "responses": {
          "200": {
            "description": "Success get all comments",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "number"
                      },
                      "userId": {
                        "type": "number"
                      },
                      "postId": {
                        "type": "number"
                      },
                      "comment": {
                        "type": "string"
                      },
                      "createdAt": {
                        "type": "string"
                      }
                    }
                  }
                },
                "example": [
                  {
                    "id": 1,
                    "userId": 1,
                    "postId": 1,
                    "comment": "Hello world",
                    "createdAt": "2024-12-10T00:00:00.000Z"
                  },
                  {
                    "id": 2,
                    "userId": 1,
                    "postId": 1,
                    "comment": "Hello world",
                    "createdAt": "2024-12-10T00:00:00.000Z"
                  }
                ]
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          }
        }
      }
    },
    "/comments/{commentId}": {
      "get": {
        "security": [
          {
            "Auth": []
          }
        ],
        "tags": ["Comment"],
        "summary": "Get comment by id",
        "description": "Get comment by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/commentId"
          }
        ],
        "responses": {
          "200": {
            "description": "Success get comment by id",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "number"
                    },
                    "userId": {
                      "type": "number"
                    },
                    "postId": {
                      "type": "number"
                    },
                    "comment": {
                      "type": "string"
                    },
                    "createdAt": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "id": 1,
                  "userId": 1,
                  "postId": 1,
                  "comment": "Hello world",
                  "createdAt": "2024-12-10T00:00:00.000Z"
                }
              }
            }
          },
          "404": {
            "description": "Comment not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "message": "Comment not found."
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          }
        }
      }
    },
    "/comments": {
      "post": {
        "security": [
          {
            "Auth": []
          }
        ],
        "tags": ["Comment"],
        "summary": "Create new comment",
        "description": "Create new comment to database",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userId": {
                    "type": "number"
                  },
                  "postId": {
                    "type": "number"
                  },
                  "comment": {
                    "type": "string"
                  }
                }
              },
              "example": {
                "userId": 1,
                "postId": 1,
                "comment": "Hello world"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success create new comment",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "number"
                    },
                    "userId": {
                      "type": "number"
                    },
                    "postId": {
                      "type": "number"
                    },
                    "comment": {
                      "type": "string"
                    },
                    "createdAt": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "id": 1,
                  "userId": 1,
                  "postId": 1,
                  "comment": "Hello world",
                  "createdAt": "2024-12-10T00:00:00.000Z"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          }
        }
      }
    },
    "/users/{userId}/comments/{commentId}": {
      "patch": {
        "security": [
          {
            "Auth": []
          }
        ],
        "tags": ["Comment"],
        "summary": "Update comment by user id and comment id",
        "description": "Update comment by user id and comment id",
        "parameters": [
          {
            "$ref": "#/components/parameters/UserId"
          },
          {
            "$ref": "#/components/parameters/commentId"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "comment": {
                    "type": "string"
                  }
                }
              },
              "example": {
                "comment": "Hello world"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success update comment by user id and comment id",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "number"
                    },
                    "userId": {
                      "type": "number"
                    },
                    "postId": {
                      "type": "number"
                    },
                    "comment": {
                      "type": "string"
                    },
                    "createdAt": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "id": 1,
                  "userId": 1,
                  "postId": 1,
                  "comment": "Hello world",
                  "createdAt": "2024-12-10T00:00:00.000Z"
                }
              }
            }
          }
        }
      },
      "delete": {
        "security": [
          {
            "Auth": []
          }
        ],
        "tags": ["Comment"],
        "summary": "Delete comment by user id and comment id",
        "description": "Delete comment by user id and comment id",
        "parameters": [
          {
            "$ref": "#/components/parameters/UserId"
          },
          {
            "$ref": "#/components/parameters/commentId"
          }
        ],
        "responses": {
          "200": {
            "description": "Success delete comment by user id and comment id",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "message": "Comment successfully deleted"
                }
              }
            }
          },
          "404": {
            "description": "Comment not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "message": "Comment not found."
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauthorized"
          }
        }
      }
    },
    "/posts/{postId}/likes": {
      "get": {
        "security": [
          {
            "Auth": []
          }
        ],
        "tags": ["Like"],
        "summary": "Like post by id",
        "description": "Like post by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/PostId"
          }
        ],
        "responses": {
          "200": {
            "description": "Success like post by id",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "number"
                    },
                    "postId": {
                      "type": "number"
                    },
                    "count": {
                      "type": "number"
                    }
                  }
                },
                "example": {
                  "id": 1,
                  "postId": 1,
                  "count": 10
                }
              }
            }
          }
        }
      },
      "post": {
        "security": [
          {
            "Auth": []
          }
        ],
        "tags": ["Like"],
        "summary": "Like post by id",
        "description": "Like post by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/PostId"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userId": {
                    "type": "number"
                  }
                }
              },
              "example": {
                "userId": 1
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success like post by id",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "number"
                    },
                    "postId": {
                      "type": "number"
                    },
                    "count": {
                      "type": "number"
                    }
                  }
                },
                "example": {
                  "id": 1,
                  "postId": 1,
                  "count": 10
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "Auth": {
        "description": "Authentication for User RESTful API",
        "type": "apiKey",
        "in": "header",
        "name": "token"
      }
    },
    "parameters": {
      "UserId": {
        "name": "userId",
        "in": "path",
        "required": true,
        "description": "User id for parameter",
        "schema": {
          "type": "number"
        }
      },
      "PostId": {
        "name": "postId",
        "in": "path",
        "required": true,
        "description": "Post id for parameter",
        "schema": {
          "type": "number"
        }
      },
      "notificationId": {
        "in": "path",
        "name": "notificationId",
        "required": true,
        "description": "Notification id for parameter",
        "schema": {
          "type": "number"
        }
      },
      "commentId": {
        "in": "path",
        "name": "commentId",
        "required": true,
        "description": "Comment id for parameter",
        "schema": {
          "type": "number"
        }
      }
    },
    "responses": {
      "badRequest": {
        "description": "Bad request",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            },
            "example": {
              "message": "Bad request"
            }
          }
        }
      },
      "unauthorized": {
        "description": "Unauthorized",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            },
            "example": {
              "message": "Unauthorized"
            }
          }
        }
      },
      "PostsNotFound": {
        "description": "Post not found",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            },
            "example": {
              "message": "Post not found."
            }
          }
        }
      }
    },
    "schemas": {
      "CreateOrGetCurrent": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "LogoutOrDelete": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          }
        }
      },
      "Profile": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "image": {
            "type": "string"
          }
        }
      },
      "FollowersAndFollowing": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "id": {
              "type": "number"
            },
            "name": {
              "type": "string"
            },
            "profile": {
              "type": "string"
            }
          }
        }
      },
      "FollowAndUnfollow": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "following": {
            "type": "object",
            "properties": {
              "id": {
                "type": "number"
              },
              "username": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            }
          }
        }
      },
      "ErrorFollowAndUnfollow": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "ResNotification": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "userId": {
            "type": "number"
          },
          "actorId": {
            "type": "number"
          },
          "type": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "isRead": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "string"
          }
        }
      }
    }
  }
}
